pid                  /run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

load_module "modules/ngx_http_geoip_module.so";

events {
    multi_accept       on;
    worker_connections 65535;
}


http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout       2s;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Logging
    log_format json_analytics escape=json '{'
                            '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                            '"connection": "$connection", ' # connection serial number
                            '"connection_requests": "$connection_requests", ' # number of requests made in connection
                    '"pid": "$pid", ' # process pid
                    '"request_id": "$request_id", ' # the unique request id
                    '"request_length": "$request_length", ' # request length (including headers and body)
                    '"remote_addr": "$remote_addr", ' # client IP
                    '"remote_user": "$remote_user", ' # client HTTP username
                    '"remote_port": "$remote_port", ' # client port
                    '"time_local": "$time_local", '
                    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                    '"request": "$request", ' # full path no arguments if the request
                    '"request_uri": "$request_uri", ' # full path and arguments if the request
                    '"args": "$args", ' # args
                    '"status": "$status", ' # response status code
                    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                    '"http_referer": "$http_referer", ' # HTTP referer
                    '"http_user_agent": "$http_user_agent", ' # user agent
                    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                    '"http_host": "$http_host", ' # the request Host: header
                    '"server_name": "$server_name", ' # the name of the vhost serving the request
                    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                    '"scheme": "$scheme", ' # http or https
                    '"request_method": "$request_method", ' # request method
                    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                    '"gzip_ratio": "$gzip_ratio", '
                    '"http_cf_ray": "$http_cf_ray",'
                    '"geoip_country_code": "$geoip_country_code"'
                    '}';

    access_log /var/log/nginx/json_access.log json_analytics;
    error_log              /var/log/nginx/error.log warn;

    geoip_country /etc/nginx/GeoIP.dat;
    geoip_city /etc/nginx/GeoIPCity.dat;

    # Sets the path, format, and configuration for a buffered log write
    # log_format compression '$remote_addr - $remote_user [$time_local] '
    #     '"$request" $status $upstream_addr '
    #     '"$http_referer" "$http_user_agent"';


    ######################################################### CASHBOX




    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;

        # SSL
        ssl_session_timeout    1d;
        ssl_session_cache      shared:SSL:10m;
        ssl_session_tickets    off;
        
        ssl_certificate /etc/nginx/ssl/live/app.tablecrm.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/app.tablecrm.com/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/live/app.tablecrm.com/chain.pem;
        
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy        "interest-cohort=()" always;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options           "SAMEORIGIN" always;

        server_name app.tablecrm.com www.app.tablecrm.com;

        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 7;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;


        location / {
            root /var/www/app/;
            index index.html index.htm;
            limit_except GET HEAD OPTIONS { deny all; }
            try_files $uri /index.html;
        }

        location /ws/ {
            proxy_pass http://backend:8000$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/v1/ {
            # limit_except GET HEAD POST PUT OPTIONS { deny all; }
            proxy_pass http://backend:8000/;
        }

        location /adminer/ {
            limit_except GET HEAD POST { deny all; }
            proxy_pass http://adminer:8080/; 
        }

        location /loki/ {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/htpasswd;

            proxy_pass http://loki:3100/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            rewrite  ^/prometheus/(.*)  /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /docasaurus/ {
            proxy_pass http://docasaurus:3000/docasaurus/;
            # rewrite  ^/docasaurus/(.*)  /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /photos/ {
            add_header Access-Control-Allow-Origin "http://backend:8000/";
            limit_except GET HEAD { deny all; }
            root /nginx/;
        }
    }

    server {
        listen      80;
        listen      [::]:80;
        server_name app.tablecrm.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://app.tablecrm.com$request_uri;
        }
    }



    ######################################################### APP2


    # server {
    #     listen                  443 ssl http2;
    #     listen                  [::]:443 ssl http2;

    #     # SSL
    #     ssl_session_timeout    1d;
    #     ssl_session_cache      shared:SSL:10m;
    #     ssl_session_tickets    off;
        
    #     ssl_certificate /etc/letsencrypt/live/app2.tablecrm.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/app2.tablecrm.com/privkey.pem;
    #     ssl_trusted_certificate /etc/letsencrypt/live/app2.tablecrm.com/chain.pem;
        
    #     add_header X-XSS-Protection          "1; mode=block" always;
    #     add_header X-Content-Type-Options    "nosniff" always;
    #     add_header Referrer-Policy           "strict-origin-when-cross-origin" always;
    #     add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    #     add_header Permissions-Policy        "interest-cohort=()" always;
    #     add_header Strict-Transport-Security "max-age=31536000" always;
    #     add_header X-Frame-Options           "SAMEORIGIN" always;

    #     server_name app2.tablecrm.com www.app2.tablecrm.com;

    #     gzip            on;
    #     gzip_vary       on;
    #     gzip_proxied    any;
    #     gzip_comp_level 7;
    #     gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;


    #     location / {
    #         root /var/www/app2/;
    #         index index.html index.htm;
    #         limit_except GET HEAD OPTIONS { deny all; }
    #         try_files $uri /index.html;
    #     }

    #     location /ws/ {
    #         proxy_pass http://backend:8000$request_uri;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #     }

    #     location /api/v1/ {
    #         # limit_except GET HEAD POST PUT OPTIONS { deny all; }
    #         proxy_pass http://backend:8000/;
    #     }

    #     location /adminer/ {
    #         limit_except GET HEAD POST { deny all; }
    #         proxy_pass http://adminer:8080/; 
    #     }

    #     location /loki/ {
    #         auth_basic "Restricted Access";
    #         auth_basic_user_file /etc/nginx/htpasswd;

    #         proxy_pass http://loki:3100/;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     location /prometheus/ {
    #         proxy_pass http://prometheus:9090/;
    #         rewrite  ^/prometheus/(.*)  /$1 break;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }

    #     location /docasaurus/ {
    #         proxy_pass http://docasaurus:3000/docasaurus/;
    #         # rewrite  ^/docasaurus/(.*)  /$1 break;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }

    #     location /photos/ {
    #         add_header Access-Control-Allow-Origin "http://backend:8000/";
    #         limit_except GET HEAD { deny all; }
    #         root /nginx/;
    #     }
    # }

    # server {
    #     listen      80;
    #     listen      [::]:80;
    #     server_name app2.tablecrm.com;

    #     location / {
    #         return 301 https://app2.tablecrm.com$request_uri;
    #     }
    # }


    ######################################################### LANDING



    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        
        # SSL
        ssl_session_timeout    1d;
        ssl_session_cache      shared:SSL:10m;
        ssl_session_tickets    off;
        
        ssl_certificate /etc/nginx/ssl/live/tablecrm.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/tablecrm.com/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/live/tablecrm.com/chain.pem;

        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy        "interest-cohort=()" always;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options           "SAMEORIGIN" always;

        server_name tablecrm.com www.tablecrm.com;

        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 7;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;


        location / {
            root /var/www/landing/;
            index index.html index.htm;
            limit_except GET HEAD OPTIONS { deny all; }
            try_files $uri /index.html;
        }
    }

    server {
        listen      80;
        listen      [::]:80;
        server_name tablecrm.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }


        location / {
            return 301 https://tablecrm.com$request_uri;
        }

    }
}